{"ast":null,"code":"export const getAIMessage = async userQuery => {\n  try {\n    const response = await fetch(\"http://127.0.0.1:5000/api/get_answer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: userQuery\n      }) // Send query as JSON\n    });\n\n    console.log(\"Response status:\", response.status); // Log status for debugging\n\n    // Ensure the response is OK before parsing\n    if (!response.ok) {\n      return {\n        role: \"assistant\",\n        content: `Server returned an error: ${response.status}`\n      };\n    }\n    const data = await response.json(); // Parse the response JSON\n    console.log(\"Backend response:\", data); // Log the response data\n\n    if (data.error) {\n      return {\n        role: \"assistant\",\n        content: `Error: ${data.error}`\n      };\n    }\n    return {\n      role: \"assistant\",\n      content: data.answer // Return the answer from the backend\n    };\n  } catch (error) {\n    console.error(\"Error:\", error); // Log any error from the fetch\n    return {\n      role: \"assistant\",\n      content: \"An error occurred while communicating with the server.\"\n    };\n  }\n};","map":{"version":3,"names":["getAIMessage","userQuery","response","fetch","method","headers","body","JSON","stringify","query","console","log","status","ok","role","content","data","json","error","answer"],"sources":["/Users/lisajl/Code/case-study/frontend/src/api/api.js"],"sourcesContent":["export const getAIMessage = async (userQuery) => {\n  try {\n    const response = await fetch(\"http://127.0.0.1:5000/api/get_answer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ query: userQuery }),  // Send query as JSON\n    });\n\n    console.log(\"Response status:\", response.status); // Log status for debugging\n\n    // Ensure the response is OK before parsing\n    if (!response.ok) {\n      return {\n        role: \"assistant\",\n        content: `Server returned an error: ${response.status}`,\n      };\n    }\n\n    const data = await response.json();  // Parse the response JSON\n    console.log(\"Backend response:\", data);  // Log the response data\n\n    if (data.error) {\n      return {\n        role: \"assistant\",\n        content: `Error: ${data.error}`,\n      };\n    }\n\n    return {\n      role: \"assistant\",\n      content: data.answer,  // Return the answer from the backend\n    };\n  } catch (error) {\n    console.error(\"Error:\", error);  // Log any error from the fetch\n    return {\n      role: \"assistant\",\n      content: \"An error occurred while communicating with the server.\",\n    };\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAER;MAAU,CAAC,CAAC,CAAG;IAC/C,CAAC,CAAC;;IAEFS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAET,QAAQ,CAACU,MAAM,CAAC,CAAC,CAAC;;IAElD;IACA,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB,OAAO;QACLC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAG,6BAA4Bb,QAAQ,CAACU,MAAO;MACxD,CAAC;IACH;IAEA,MAAMI,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC,CAAC,CAAE;IACrCP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,IAAI,CAAC,CAAC,CAAE;;IAEzC,IAAIA,IAAI,CAACE,KAAK,EAAE;MACd,OAAO;QACLJ,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAG,UAASC,IAAI,CAACE,KAAM;MAChC,CAAC;IACH;IAEA,OAAO;MACLJ,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAEC,IAAI,CAACG,MAAM,CAAG;IACzB,CAAC;EACH,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAE;IACjC,OAAO;MACLJ,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}